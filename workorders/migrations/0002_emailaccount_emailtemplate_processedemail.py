# Generated by Django 5.2.4 on 2025-07-18 03:08

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('workorders', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='EmailAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Display name for this email account', max_length=100)),
                ('email_address', models.EmailField(max_length=254, unique=True)),
                ('protocol', models.CharField(choices=[('imap', 'IMAP'), ('pop3', 'POP3')], default='imap', max_length=10)),
                ('host', models.CharField(help_text='Email server hostname', max_length=255)),
                ('port', models.IntegerField(default=993, help_text='Email server port')),
                ('username', models.CharField(help_text='Username for email authentication', max_length=255)),
                ('password', models.CharField(help_text='Password for email authentication', max_length=255)),
                ('use_ssl', models.BooleanField(default=True, help_text='Use SSL/TLS encryption')),
                ('default_priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', max_length=10)),
                ('is_active', models.BooleanField(default=True, help_text='Enable/disable email processing for this account')),
                ('last_processed', models.DateTimeField(blank=True, help_text='Last time emails were processed', null=True)),
                ('processed_count', models.IntegerField(default=0, help_text='Total number of emails processed')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('auto_assign_to', models.ForeignKey(blank=True, help_text='Automatically assign tickets to this user', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('default_task_category', models.ForeignKey(help_text='Default category for email tickets', on_delete=django.db.models.deletion.CASCADE, to='workorders.taskcategory')),
                ('default_task_type', models.ForeignKey(help_text='Default task type for email tickets', on_delete=django.db.models.deletion.CASCADE, to='workorders.tasktype')),
            ],
            options={
                'verbose_name': 'Email Account',
                'verbose_name_plural': 'Email Accounts',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='EmailTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('template_type', models.CharField(choices=[('ticket_created', 'Ticket Created'), ('ticket_updated', 'Ticket Updated'), ('ticket_resolved', 'Ticket Resolved'), ('ticket_closed', 'Ticket Closed')], max_length=20)),
                ('subject', models.CharField(help_text='Email subject (supports variables like {{ticket_number}})', max_length=255)),
                ('body', models.TextField(help_text='Email body (supports variables like {{ticket_number}}, {{title}}, {{status}})')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Email Template',
                'verbose_name_plural': 'Email Templates',
                'ordering': ['name'],
                'unique_together': {('template_type',)},
            },
        ),
        migrations.CreateModel(
            name='ProcessedEmail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message_id', models.CharField(help_text='Email Message-ID header', max_length=255)),
                ('subject', models.CharField(max_length=500)),
                ('sender_email', models.EmailField(max_length=254)),
                ('sender_name', models.CharField(blank=True, max_length=255)),
                ('received_date', models.DateTimeField()),
                ('processed_date', models.DateTimeField(auto_now_add=True)),
                ('processing_status', models.CharField(choices=[('success', 'Success'), ('failed', 'Failed'), ('duplicate', 'Duplicate'), ('ignored', 'Ignored')], default='success', max_length=20)),
                ('processing_notes', models.TextField(blank=True, help_text='Notes about processing result')),
                ('email_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='processed_emails', to='workorders.emailaccount')),
                ('work_order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='source_email', to='workorders.workorder')),
            ],
            options={
                'verbose_name': 'Processed Email',
                'verbose_name_plural': 'Processed Emails',
                'ordering': ['-received_date'],
                'unique_together': {('email_account', 'message_id')},
            },
        ),
    ]
